name: Python package pipeline
on: push
jobs:
  test-build-publish:
    name: LINT Flake8, Pytest, Build package and publish to Github and PyPI
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4.1.1
      - name: Setup Python 3.9.18
        uses: actions/setup-python@v1
        with:
          python-version: 3.9.18
      - name: Install package and dependencies
        run: |
          python -m pip install --upgrade pip==23.3.1
          pip install -e .[dev,test,doc]
      - name: Run flake8 static analysis
        uses: xanderhendriks/flake8-action@v2.1.0
        with:
          checkName: 'test-build-publish'   # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Pytest for testing the code
        run: python -m pytest
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3.1.3
        with:
          name: pytest-results
          path: junit/test-results.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Create documentation
        run: |
          sphinx-build doc build/sphinx/html
          touch build/sphinx/html/.nojekyll
      - name: Publish documentation
        if: startsWith(github.ref, 'refs/tags')
        uses: JamesIves/github-pages-deploy-action@v4.4.3
        with:
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build/sphinx/html # The folder the action should deploy.
      - name: Build a binary wheel and a source tarball
        run: |
          python -m build
          python -m wheel tags --platform-tag win32 dist/*.whl
      - name: Upload wheel file
        uses: actions/upload-artifact@v3.1.3
        with:
          name: wheel
          path: dist/*win32.whl
      - name: Publish package to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          password: ${{ secrets.pypi_key }}